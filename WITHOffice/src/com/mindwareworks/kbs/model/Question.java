package com.mindwareworks.kbs.model;

// default package
// Generated 2012. 3. 2 오후 8:12:59 by Hibernate Tools 3.2.0.beta8

import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.SecondaryTable;
import javax.persistence.SecondaryTables;
import javax.persistence.Table;

import org.hibernate.annotations.CollectionId;
import org.hibernate.annotations.Type;

/**
 * Question generated by hbm2java
 */
@Entity
@Table(name = "K_QUESTION", schema = "KBSTRI")
@org.hibernate.annotations.GenericGenerator(name="sequence",strategy="sequence",
parameters={@org.hibernate.annotations.Parameter(name="sequence", value="SEQ_QUESTION")})
@SecondaryTables({ 
    @SecondaryTable(name="K_CORRECT_ANSWER", pkJoinColumns={ 
        @PrimaryKeyJoinColumn(name="question_id", referencedColumnName="question_id")})}) 
public class Question implements java.io.Serializable {

	// Fields

	private Integer questionId;
	private Integer point;
	private String questionContents;
	private String questionType;

	private Set<AnswerExample> answerExamples = new HashSet<AnswerExample>(0);
	private CorrectAnswer correctAnswer;

	// Constructors

	/** default constructor */
	public Question() {
	}

	/** minimal constructor */
	public Question(Integer questionId) {
		this.questionId = questionId;
	}
	
	public Question(String questionContents, String questionType,Integer point){
		this.questionContents = questionContents;
		this.questionType  = questionType;
		this.point = point;
	}

	

	// Property accessors
	@Id
	@GeneratedValue(generator="sequence")
	@Column(name = "QUESTION_ID", unique = false, nullable = false, insertable = true, updatable = true, precision = 0)
	public Integer getQuestionId() {
		return this.questionId;
	}

	public void setQuestionId(Integer questionId) {
		this.questionId = questionId;
	}

	@Column(name = "POINT", unique = false, nullable = true, insertable = true, updatable = true, precision = 0)
	public Integer getPoint() {
		return this.point;
	}

	public void setPoint(Integer point) {
		this.point = point;
	}

	@Column(name = "QUESTION_CONTENTS", unique = false, nullable = true, insertable = true, updatable = true)
	public String getQuestionContents() {
		return this.questionContents;
	}

	public void setQuestionContents(String questionContents) {
		this.questionContents = questionContents;
	}

	@Column(name = "QUESTION_TYPE", unique = false, nullable = true, insertable = true, updatable = true, length = 1)
	public String getQuestionType() {
		return this.questionType;
	}

	public void setQuestionType(String questionType) {
		this.questionType = questionType;
	}

	@org.hibernate.annotations.CollectionOfElements(fetch=FetchType.EAGER)
	@JoinTable(
			name="K_ANSWER_EXAMPLE",
			joinColumns = @JoinColumn(name="question_id")
			)
	@org.hibernate.annotations.OrderBy(clause="EXAMPLE_NUMBER asc")
//	@AttributeOverrides({
//		@AttributeOverride(name = "element.exampleNumber", column = @Column(name = "EXAMPLE_NUMBER",nullable=false)),
//		@AttributeOverride(name = "element.example", column = @Column(name = "EXAMPLE",nullable=false))
//	})
	@org.hibernate.annotations.Fetch(org.hibernate.annotations.FetchMode.JOIN)
	public Set<AnswerExample> getAnswerExamples() {
		return this.answerExamples;
	}

	public void setAnswerExamples(Set<AnswerExample> answerExamples) {
		this.answerExamples = answerExamples;
	}
	
	@Embedded
	@AttributeOverrides({
		@AttributeOverride(name = "answer", column = @Column(table="K_CORRECT_ANSWER",name = "ANSWER"))
	})
	public CorrectAnswer getCorrectAnswer() {
		return this.correctAnswer;
	}

	public void setCorrectAnswer(CorrectAnswer correctAnswer) {
		this.correctAnswer = correctAnswer;
	}
	
	public boolean equals(java.lang.Object object){
		if(object == null || !(object instanceof Question)){
			return false;
		}
		
		Question target  = (Question)object;
		return target.getQuestionId().equals(questionId);
	}
	
	public int hashCode(){
		return questionId.hashCode();
	}
	

	/**
	 * toString
	 * 
	 * @return String
	 */
	public String toString() {
		StringBuffer buffer = new StringBuffer();

		buffer.append("[");
		buffer.append("questionId").append("='").append(getQuestionId())
				.append("' ");
		buffer.append("point").append("='").append(getPoint()).append("' ");
		buffer.append("questionContents").append("='")
				.append(getQuestionContents()).append("' ");
		buffer.append("]");

		return buffer.toString();
	}
}
