package com.mindwareworks.kbs.model;
// default package
// Generated 2012. 3. 2 오후 8:12:59 by Hibernate Tools 3.2.0.beta8


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * SurveyParticipation generated by hbm2java
 */
@Entity
@Table(name="K_SURVEY_PARTICIPATION"
    ,schema="KBSTRI"
)
public class SurveyParticipation  implements java.io.Serializable {

    // Fields    

     private SurveyParticipationId id;
     private Member member;
     private RelatedSurvey relatedSurvey;
     private String answer;

     // Constructors

    /** default constructor */
    public SurveyParticipation() {
    }

	/** minimal constructor */
    public SurveyParticipation(SurveyParticipationId id, Member member, RelatedSurvey relatedSurvey) {
        this.id = id;
        this.member = member;
        this.relatedSurvey = relatedSurvey;
    }
    /** full constructor */
    public SurveyParticipation(SurveyParticipationId id, Member member, RelatedSurvey relatedSurvey, String answer) {
       this.id = id;
       this.member = member;
       this.relatedSurvey = relatedSurvey;
       this.answer = answer;
    }
   
    // Property accessors
     @EmbeddedId
    
    @AttributeOverrides( {
        @AttributeOverride(name="memberid", column=@Column(name="MEMBERID", unique=false, nullable=false, insertable=true, updatable=true, precision=0) ), 
        @AttributeOverride(name="questionId", column=@Column(name="QUESTION_ID", unique=false, nullable=false, insertable=true, updatable=true, precision=0) ), 
        @AttributeOverride(name="contentId", column=@Column(name="CONTENT_ID", unique=false, nullable=false, insertable=true, updatable=true, precision=0) ) } )
    public SurveyParticipationId getId() {
        return this.id;
    }
    
    public void setId(SurveyParticipationId id) {
        this.id = id;
    }
@ManyToOne(cascade={},
        fetch=FetchType.LAZY)
    
    @JoinColumn(name="MEMBERID", unique=false, nullable=false, insertable=false, updatable=false)
    public Member getMember() {
        return this.member;
    }
    
    public void setMember(Member member) {
        this.member = member;
    }
@ManyToOne(cascade={},
        fetch=FetchType.LAZY)
    
    @JoinColumns( { 
        @JoinColumn(name="QUESTION_ID", unique=false, nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="CONTENT_ID", unique=false, nullable=false, insertable=false, updatable=false) } )
    public RelatedSurvey getRelatedSurvey() {
        return this.relatedSurvey;
    }
    
    public void setRelatedSurvey(RelatedSurvey relatedSurvey) {
        this.relatedSurvey = relatedSurvey;
    }
    
    @Column(name="ANSWER", unique=false, nullable=true, insertable=true, updatable=true)
    public String getAnswer() {
        return this.answer;
    }
    
    public void setAnswer(String answer) {
        this.answer = answer;
    }




}


