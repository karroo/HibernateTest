package com.mindwareworks.kbs.model;

// default package
// Generated 2012. 3. 2 오후 8:12:59 by Hibernate Tools 3.2.0.beta8

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.FetchMode;

/**
 * RelatedQuiz generated by hbm2java
 */
@Entity
@Table(name = "K_RELATED_QUIZ", schema = "KBSTRI")
public class RelatedQuiz implements java.io.Serializable {

	// Fields

	private RelatedQuizId id;
	private Content content;
	private Question question;
	private Integer startTime;
	private Integer endTime;

	// Constructors

	/** default constructor */
	public RelatedQuiz() {
	}

	/** minimal constructor */
	public RelatedQuiz(RelatedQuizId id, Content content, Question question) {
		this.id = id;
		this.content = content;
		this.question = question;
	}

	/** full constructor */
	public RelatedQuiz(RelatedQuizId id, Content content,
			Question question, Integer startTime, Integer endTime) {
		this.id = id;
		this.content = content;
		this.question = question;
		this.startTime = startTime;
		this.endTime = endTime;
	}

	// Property accessors
	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "questiontId", column = @Column(name = "QUESTION_ID", unique = false, nullable = false, insertable = true, updatable = true, precision = 0)),
			@AttributeOverride(name = "contentId", column = @Column(name = "CONTENT_ID", unique = false, nullable = false, insertable = true, updatable = true, precision = 0)) })
	public RelatedQuizId getId() {
		return this.id;
	}

	public void setId(RelatedQuizId id) {
		this.id = id;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "CONTENT_ID", unique = false, nullable = false, insertable = false, updatable = false)
	public Content getContent() {
		return this.content;
	}

	public void setContent(Content content) {
		this.content = content;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.EAGER)
	@JoinColumn(name = "QUESTION_ID", unique = false, nullable = false, insertable = false, updatable = false)
//	@org.hibernate.annotations.Fetch(FetchMode.JOIN)
	public Question getQuestion() {
		return this.question;
	}

	public void setQuestion(Question question) {
		this.question = question;
	}

	@Column(name = "START_TIME", unique = false, nullable = true, insertable = true, updatable = true, precision = 0)
	public Integer getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Integer startTime) {
		this.startTime = startTime;
	}

	@Column(name = "END_TIME", unique = false, nullable = true, insertable = true, updatable = true, precision = 0)
	public Integer getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Integer endTime) {
		this.endTime = endTime;
	}

}
